route:
  enabled: true
  host: keycloak-consumer.dome.fiware.dev
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  certificate:
    issuer:
      kind: ClusterIssuer
      name: letsencrypt-aws-prod
  
keycloak:  
  image: 
    registry: quay.io
    repository: wi_stefan/keycloak
    tag: vc
    pullPolicy: Always
  service:
    type: ClusterIP
  logging:
    level: INFO
  replicaCount: 1
  auth:
    existingSecret: keycloak-consumer-secret
    passwordSecretKey: keycloak-admin
    adminUser: fiwareAdmin
  serviceAccount:
    create: true
  rbac:
    create: true
    rules:
      - apiGroups:
        - security.openshift.io
        resourceNames:
        - anyuid
        resources:
        - securitycontextconstraints
        verbs:
        - use
  containerSecurityContext: 
    enabled: false

  proxy: edge

  keycloakConfigCli:
    enabled: true
    command: 
      - java
      - -jar
      - /opt/bitnami/keycloak-config-cli/keycloak-config-cli.jar

    extraEnvVars:
      - name: IMPORT_FILES_LOCATIONS
        value: "/config/*"
    containerSecurityContext:
      enabled: false
    podSecurityContext:
      enabled: false
    existingConfigmap: keycloak-consumer-realm
  
  extraEnvVars:
  - name: KC_HOSTNAME_DEBUG
    value: "true"
  - name: KC_HOSTNAME
    value: "keycloak-consumer.dome.fiware.dev"
  - name: KC_HOSTNAME_STRICT
    value: "true"
  - name: KC_HOSTNAME_STRICT_BACKCHANNEL
    value: "true"
  - name: KC_PROXY
    value: "edge"
  - name: KC_FEATURES
    value: "account3,scripts"
  - name: KC_DB_URL_HOST
    value: postgresql-consumer
  - name: KC_DB_URL_DATABASE
    value: keycloak_consumer
  - name: KC_DB_USERNAME
    value: postgres
  - name: KC_DB_PASSWORD
    valueFrom:
      secretKeyRef:
        key: postgres-password
        name: postgres-keycloak-consumer-secret      
  - name: KC_ADMIN_PASSWORD
    valueFrom:
      secretKeyRef:
        key: keycloak-admin
        name: keycloak-consumer-secret

  extraVolumeMounts:
    - name: providers
      mountPath: /opt/bitnami/keycloak/providers/
    - name: data
      mountPath: /data
    - name: private-key
      mountPath: /opt/key

  extraVolumes:
    - name: data
      emptyDir: {}
    - name: private-key
      secret:
        secretName: dome-consumer-waltid-vcwaltid-tls-sec
    - name: providers
      emptyDir: {}
  
  #initContainers:
  #  - name: add-vc-issuer
  #    image: quay.io/wi_stefan/keycloak-vc-issuer:no-walt
  #    imagePullPolicy: Always
  #    volumeMounts:
  #      - name: providers
  #        mountPath: /target
  
  postgresql:
    enabled: false

  externalDatabase:
    host: postgresql-consumer
    user: postgres
    database: keycloak_consumer
    existingSecret: postgres-keycloak-consumer-secret
    existingSecretPasswordKey: postgres-password
