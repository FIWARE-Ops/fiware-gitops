apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-consumer-realm
data:
  dome-realm.json: |-
    {
      "id": "dome",
      "realm": "dome",
      "displayName": "Keycloak",
      "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
      "enabled": true,
      "attributes": {
        "frontendUrl": "https://keycloak-consumer.dome.fiware.dev/",
        "issuerDid": "did:web:consumer.dome.fiware.dev"
      },
      "sslRequired": "none",
      "roles": {
        "realm": [
          {
            "name": "user",
            "description": "User privileges",
            "composite": false,
            "clientRole": false,
            "containerId": "dome",
            "attributes": {}
          }
        ],
        "client": {
          "did:web:onboarding.dome-marketplace.org": [
            {
              "name": "LEGAL_REPRESENTATIVE",
              "description": "Is allowed to register participants",
              "clientRole": true
            },
            {
              "name": "EMPLOYEE",
              "description": "Is allowed to see participants",
              "clientRole": true
            }
          ],
          "did:web:dome-marketplace.org": [
            {
              "name": "consumer",
              "description": "Is allowed to buy.",
              "clientRole": true
            }
          ]
        }
      },
      "groups": [
      ],
      "users": [
         {
          "username": "test-user",
          "enabled": true,
          "email": "test@user.org",
          "firstName": "Test",
          "lastName": "AnimalUserGoodsEmployee",
          "credentials": [
            {
              "type": "password",
              "value": "test"
            }
          ],
          "clientRoles": {
            "did:web:onboarding.dome-marketplace.org": [
              "EMPLOYEE"
            ],
            "did:web:dome-marketplace.org" : [
              "consumer"
            ],
            "account": [
              "view-profile",
              "manage-account"
            ]
          },
          "groups": [
          ]
        }
      ],
      "clients": [
        {
          "clientId": "did:web:onboarding.dome-marketplace.org",
          "enabled": true,
          "description": "Client to connect the onboarding services of the marketplace",
          "surrogateAuthRequired": false,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "defaultRoles": [],
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "oid4vp",
          "attributes": {
              "client.secret.creation.time": "1675260539",
              "vctypes_NaturalPersonCredential": "ldp_vc,jwt_vc,sd-jwt_vc",
              "vctypes_GaiaXParticipantCredential": "ldp_vc,jwt_vc,sd-jwt_vc"
          },
          "protocolMappers": [
            { 
              "name": "target-role-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-target-role-mapper",
              "config": {
                   "subjectProperty": "roles",
                   "clientId": "did:web:onboarding.dome-marketplace.org",
                   "supportedCredentialTypes": "NaturalPersonCredential"
              }
            },
            { 
              "name": "email-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-user-attribute-mapper",
              "config": {
                   "subjectProperty": "email",
                   "userAttribute": "email", 
                   "supportedCredentialTypes": "NaturalPersonCredential"
              }
            },
            { 
              "name": "first-name-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-user-attribute-mapper",
              "config": {
                   "subjectProperty": "firstName",
                   "userAttribute": "firstName", 
                   "supportedCredentialTypes": "NaturalPersonCredential"
              }
            },
            { 
              "name": "lastName-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-user-attribute-mapper",
              "config": {
                   "subjectProperty": "familyName",
                   "userAttribute": "lastName", 
                   "supportedCredentialTypes": "NaturalPersonCredential" 
              }
            },
            { 
              "name": "id-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-subject-id-mapper", 
              "config": {
                "supportedCredentialTypes": "NaturalPersonCredential,GaiaXParticipantCredential"
              }
            },
            { 
              "name": "did-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-static-claim-mapper",
              "config": {
                "subjectProperty": "subjectDid",
                "staticValue": "did:web:dome-marketplace.org",
                "supportedCredentialTypes": "GaiaXParticipantCredential"
              }
            },
            { 
              "name": "legal-name-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-static-claim-mapper",
              "config": {
                "subjectProperty": "gx:legalName",
                "staticValue": "dome-marketplace.org",
                "supportedCredentialTypes": "GaiaXParticipantCredential"
              }
            }
          ],
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [],
          "optionalClientScopes": []
        },
        {
          "clientId": "did:web:dome-marketplace.org",
          "enabled": true,
          "description": "Client to connect to the marketplace portal.",
          "surrogateAuthRequired": false,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "defaultRoles": [],
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "oid4vp",
          "attributes": {
              "client.secret.creation.time": "1675260539",
              "expiryInMin": "3600",
              "vctypes_NaturalPersonCredential": "ldp_vc,jwt_vc,sd-jwt_vc"
          },
          "protocolMappers": [
            { 
              "name": "target-role-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-target-role-mapper",
              "config": {
                "subjectProperty": "roles",
                "clientId": "did:web:dome-marketplace.org",
                "supportedCredentialTypes": "NaturalPersonCredential"
              }
            },
            { 
              "name": "email-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-user-attribute-mapper",
              "config": {
                "subjectProperty": "email",
                "userAttribute": "email",
                "supportedCredentialTypes": "NaturalPersonCredential"
              }
            },
            { 
              "name": "first-name-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-user-attribute-mapper",
              "config": {
                "subjectProperty": "firstName",
                "userAttribute": "firstName",
                "supportedCredentialTypes": "NaturalPersonCredential" 
              }
            },
            { 
              "name": "lastName-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-user-attribute-mapper",
              "config": {
                "subjectProperty": "familyName",
                "userAttribute": "lastName",
                "supportedCredentialTypes": "NaturalPersonCredential"  
              }
            },
            { 
              "name": "id-mapper",
              "protocol": "oid4vp",
              "protocolMapper": "oid4vp-subject-id-mapper",
              "config": {
                "supportedCredentialTypes": "NaturalPersonCredential"
              }
            }
          ],
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [],
          "optionalClientScopes": []
        }
      ],
      "clientScopes": [
        {
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            },
            {
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String"
              }
            },
            {
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long"
              }
            },
            {
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "introspection.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            },
            {
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        },
        {
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            },
            {
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "multivalued": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "access.token.claim": "true"
              }
            }
          ]
        },
        {
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "introspection.token.claim": "true",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            },
            {
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
      ],
      "defaultOptionalClientScopes": [
      ],
      "components": {
        "org.keycloak.protocol.oid4vc.issuance.signing.VerifiableCredentialsSigningService": [
          {
            "id": "jwt-signing",
            "name": "jwt-signing-service", 
            "providerId": "jwt_vc",
            "subComponents": {},
            "config": {
              "keyId": ["GwZfdu_xA5MYJmIWnrAdvbExMMWGdsqfY2qoqFVhVPM"],
              "algorithmType": ["RS256"],
              "issuerDid": ["did:web:consumer.dome.fiware.dev"]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
        {
          "id": "a4589e8f-7f82-4345-b2ea-ccc9d4366600",
          "name": "dome-consumer-key",
          "providerId": "rsa",
          "subComponents": {},
          "config": {
            "privateKey": [
              "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA1M1vl2mW0ewMctKEoCYG6+SgV9TqN+4oIt2ZLkQb1O+yWGTW\nuu8h2U7yZ+Dc1JfSPUd45eU1p9j3rYu5Bs2Labc6zZUYyBMjZXopv/AqIOhvuTRR\ng7v4yRkC6QACniLndPCkanlp/8dL98Gmm8x+oOjYf1UFbGxjGqqVxfNVZmGi9NLE\n6AM0e4wmBVknwWTcC3TTHDxgAxHHa0GhL1y7OYsmw9Kz1riUWlr0Az3lBclOFACb\nOp/cGnyHnotErw1xKVQtGOv4GIsYQZr4jIeQkoFcqbAQVOk30NjTRNgVra2JzEpM\nvhbm4l+WHK2OfsPfBx6OKTOmet6zJnnNC608jQIDAQABAoIBAA+gyro28fGWwU9J\ncJ4GTOnUD4aDx3O2FNKCrbY9IEIiHFnrhe2SlEzORHUmiXE/eRww/Ir9q1QZVg8z\nvLHoNH3eC/5/HaPL7ASO1TQYYi+qglH6qqXfDyVNpe4QpyCP9amb5qc/JW64ZzbZ\nzO+SNBaDIysuxkgxKZISxw8TkMkE7jvh6RafPkIBldIhGunWQ33on08UJaTAeCz2\nw+3g7Ei8Ejg6sMZ+HGTJ9omA7xVOT+baLm9zwwQh1RcYV9MRywljAnJRs9iDwRzn\n2uWOpqFbmdTRDRuZmocP2ks9Wty5Ub3iyu7n1M9y5W8fxdmuZ4mXSYoG6jm/tJzo\nd8yRHYECgYEA/KP8MFyhWsH9F/eMDdq6oMG/Gk5VQcp6gadoHy2g710h37stTPRN\nnyitAo6enWoKNFH2jZBvGxrUY4n7+Zib51zhUf6L6YvP77yYn4txIwZYITzdr4X7\nivL4IH4qmoM5T2DRMD/bSN2c87v5IKpnuySL81C+irr1ZFSqDe5anKECgYEA16HW\nebVv87icGHDlkON21VCeTpnpofntjKSvEYfHRsyzldgkaurGSjIjojtdj0t2fHfx\nMt0VBHLENop1E0Up/jhroYjlBXFcIPwaBwSECoIzzoZApL/kJciijek3V6GWne0R\nIskVLTBxvVf4gz2bovRY4zgsi3cLs719KL8hDG0CgYEAsJohC910nXDFbx+IM5cW\nppFI+SaQynCzujY/vquyuCAuMasyO3z7VaqlZgg0MG2TvIcfBk5UnGng1cP687sO\nIGj4yMxbGWK2dCsttTlQWN9yc6mMfcn20GaPtIb9WQ0p3qcbE9NPglwH/wkDWSZF\nZLhjbC6hQ3D1YLEePqbDiIECgYBgwl5bfu8djll9HivlOCy6y9I9sxMDfAL8eWmV\nlDf3rSNoufSdhXw1DwquYbU598LTV38EM/CabmVdlAO1AfQ1/1tMwQED0DpnErkb\nLQuTK5nTsqqPQww9aCqJQ31x9TCA7UAjO9gkzvg63p7FRX/xP3QjgbF7Y4/8t6rR\n/fH2gQKBgAvBF7+OQWNWC4VPYGX6GMveqvN7/87qwGMltB5OQZWiODEuKYPLKmll\nsin1Xlek/Fe4zRSe+mWTs9pnrZ7VWIUUlBbW9V/tgRKcW7c6S4r69Gih5gToFE6Q\nEH4j0DoVcaH3nWOxwQqKrQL0tk2faSS0Y0O6wGDQiEuDvk4AGmGp\n-----END RSA PRIVATE KEY-----\n\n"
            ],
            "certificate": [
              "-----BEGIN CERTIFICATE-----\nMIIE/jCCA+agAwIBAgISA6pEpAokqYJAJqQPgnCnsHAsMA0GCSqGSIb3DQEBCwUA\nMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD\nEwJSMzAeFw0yMzEyMjQwNTQxMzFaFw0yNDAzMjMwNTQxMzBaMCMxITAfBgNVBAMT\nGGNvbnN1bWVyLmRvbWUuZml3YXJlLmRldjCCASIwDQYJKoZIhvcNAQEBBQADggEP\nADCCAQoCggEBANTNb5dpltHsDHLShKAmBuvkoFfU6jfuKCLdmS5EG9Tvslhk1rrv\nIdlO8mfg3NSX0j1HeOXlNafY962LuQbNi2m3Os2VGMgTI2V6Kb/wKiDob7k0UYO7\n+MkZAukAAp4i53TwpGp5af/HS/fBppvMfqDo2H9VBWxsYxqqlcXzVWZhovTSxOgD\nNHuMJgVZJ8Fk3At00xw8YAMRx2tBoS9cuzmLJsPSs9a4lFpa9AM95QXJThQAmzqf\n3Bp8h56LRK8NcSlULRjr+BiLGEGa+IyHkJKBXKmwEFTpN9DY00TYFa2ticxKTL4W\n5uJflhytjn7D3wcejikzpnresyZ5zQutPI0CAwEAAaOCAhswggIXMA4GA1UdDwEB\n/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDAYDVR0TAQH/\nBAIwADAdBgNVHQ4EFgQUxOKFQ5oAbX4U5ixy4ofvajMkTdAwHwYDVR0jBBgwFoAU\nFC6zF7dYVsuuUAlA5h+vnYsUwsYwVQYIKwYBBQUHAQEESTBHMCEGCCsGAQUFBzAB\nhhVodHRwOi8vcjMuby5sZW5jci5vcmcwIgYIKwYBBQUHMAKGFmh0dHA6Ly9yMy5p\nLmxlbmNyLm9yZy8wIwYDVR0RBBwwGoIYY29uc3VtZXIuZG9tZS5maXdhcmUuZGV2\nMBMGA1UdIAQMMAowCAYGZ4EMAQIBMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHcA\nSLDja9qmRzQP5WoC+p0w6xxSActW3SyB2bu/qznYhHMAAAGMmo6vgQAABAMASDBG\nAiEAzJ0YhzMGyKKrkD66BAJQkWOqQS4E32X9jYvVL/XjqR4CIQCtrHjnCE7LdIBh\nESY873ctjvd3izH/F+OeoLocfP/p8wB2AHb/iD8KtvuVUcJhzPWHujS0pM27Kdxo\nQgqf5mdMWjp0AAABjJqOsBQAAAQDAEcwRQIhALZ8CQK+/Rj8p0krq96y68KED2qN\n9VWEA/diHmc3BSPkAiBhmZRBIDYZ3+BwiYQXLmWB34Uc8RCvsEHBHLVsLWJtizAN\nBgkqhkiG9w0BAQsFAAOCAQEAn/2qNjtU0v1fQbTnFgrOzvCDnruhWSgqC7t9/vAv\n+mK5t/KEIwMfDAXiaNXofn8me5nXXsfGSxhqNfXpBBfzGA6MEM3Rfqd+D2ie5+oW\ntNY+5Tdoi/jdaww07ZiiFsFPPfPgHZ6LbU/jDP4J0VwwYt30+FWMkKecsXKOCt+V\nUB3tgo0PY3DQOsbmSt9rFAIv8LHa8mQ/ikF+sk07BP+CfAjPz/4Rg8AR8A9mtqKM\nlD3AvvMLxVga/KgEEaB4vGrcK1liBFZF6/RRwExeXn0nErcHYGiqeiyYD8sI07QC\nRv2bv0LYkmEKqB/RxgTWMkltTQUFjUD55Dy1/4UTXtM9yg==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw\nWhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg\nRW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP\nR5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx\nsxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm\nNHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg\nZ3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG\n/kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC\nAYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB\nAf8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA\nFHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw\nAoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw\nOi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB\ngt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W\nPTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl\nikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz\nCkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm\nlJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4\navAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2\nyJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O\nyK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids\nhCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+\nHlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv\nMldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX\nnLRbwHOoq7hHwg==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFYDCCBEigAwIBAgIQQAF3ITfU6UK47naqPGQKtzANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTIxMDEyMDE5MTQwM1oXDTI0MDkzMDE4MTQwM1ow\nTzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh\ncmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQCt6CRz9BQ385ueK1coHIe+3LffOJCMbjzmV6B493XC\nov71am72AE8o295ohmxEk7axY/0UEmu/H9LqMZshftEzPLpI9d1537O4/xLxIZpL\nwYqGcWlKZmZsj348cL+tKSIG8+TA5oCu4kuPt5l+lAOf00eXfJlII1PoOK5PCm+D\nLtFJV4yAdLbaL9A4jXsDcCEbdfIwPPqPrt3aY6vrFk/CjhFLfs8L6P+1dy70sntK\n4EwSJQxwjQMpoOFTJOwT2e4ZvxCzSow/iaNhUd6shweU9GNx7C7ib1uYgeGJXDR5\nbHbvO5BieebbpJovJsXQEOEO3tkQjhb7t/eo98flAgeYjzYIlefiN5YNNnWe+w5y\nsR2bvAP5SQXYgd0FtCrWQemsAXaVCg/Y39W9Eh81LygXbNKYwagJZHduRze6zqxZ\nXmidf3LWicUGQSk+WT7dJvUkyRGnWqNMQB9GoZm1pzpRboY7nn1ypxIFeFntPlF4\nFQsDj43QLwWyPntKHEtzBRL8xurgUBN8Q5N0s8p0544fAQjQMNRbcTa0B7rBMDBc\nSLeCO5imfWCKoqMpgsy6vYMEG6KDA0Gh1gXxG8K28Kh8hjtGqEgqiNx2mna/H2ql\nPRmP6zjzZN7IKw0KKP/32+IVQtQi0Cdd4Xn+GOdwiK1O5tmLOsbdJ1Fu/7xk9TND\nTwIDAQABo4IBRjCCAUIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw\nSwYIKwYBBQUHAQEEPzA9MDsGCCsGAQUFBzAChi9odHRwOi8vYXBwcy5pZGVudHJ1\nc3QuY29tL3Jvb3RzL2RzdHJvb3RjYXgzLnA3YzAfBgNVHSMEGDAWgBTEp7Gkeyxx\n+tvhS5B1/8QVYIWJEDBUBgNVHSAETTBLMAgGBmeBDAECATA/BgsrBgEEAYLfEwEB\nATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vY3BzLnJvb3QteDEubGV0c2VuY3J5cHQu\nb3JnMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuaWRlbnRydXN0LmNvbS9E\nU1RST09UQ0FYM0NSTC5jcmwwHQYDVR0OBBYEFHm0WeZ7tuXkAXOACIjIGlj26Ztu\nMA0GCSqGSIb3DQEBCwUAA4IBAQAKcwBslm7/DlLQrt2M51oGrS+o44+/yQoDFVDC\n5WxCu2+b9LRPwkSICHXM6webFGJueN7sJ7o5XPWioW5WlHAQU7G75K/QosMrAdSW\n9MUgNTP52GE24HGNtLi1qoJFlcDyqSMo59ahy2cI2qBDLKobkx/J3vWraV0T9VuG\nWCLKTVXkcGdtwlfFRjlBz4pYg1htmf5X6DYO8A4jqv2Il9DjXA6USbW1FzXSLr9O\nhe8Y4IWS6wY7bCkjCWDcRQJMEhg76fsO3txE+FiYruq9RUWhiF1myv4Q6W+CyBFC\nDfvp7OOGAN6dEOM4+qR9sdjoSYKEBpsr6GtPAQw4dy753ec5\n-----END CERTIFICATE-----\n\n"
            ],
            "active": [
              "true"
            ],
            "priority": [
              "0"
            ],
            "enabled": [
              "true"
            ],
            "algorithm": [
              "RS256"
            ]
          }
        }]
      }
    }
