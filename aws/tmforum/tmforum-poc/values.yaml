## Default values for tmforum.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

# -- option to override the name config in the _helpers.tpl
nameOverride: ""
# -- option to override the fullname config in the _helpers.tpl
fullnameOverride: ""

## configuration for the k8s service to access tmforum
service:
  # -- service type
  type: ClusterIP
  # -- port to be used by the service
  port: 8080
  # -- addtional annotations, if required
  annotations: {}

# -- if a tmforum specific service account should be used, it can be configured here
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- specifies if the account should be created
  create: false

## deployment specific configuration
deployment:
  # -- initial number of target replications, can be different if autoscaling is enabled
  replicaCount: 1
  # -- number of old replicas to be retained
  revisionHistoryLimit: 3
  ## configuration of the tmforum update strategy
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 1
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 0
  ## configuration of the image to be used
  image:
    # -- tmforum image name
    # ref: https://quay.io/wi_stefan/tm-forum-api
    repository: quay.io/wi_stefan/tm-forum-api
    # -- tag of the image to be used
    tag: 0.0.2
    # -- specification of the image pull policy
    pullPolicy: IfNotPresent

  # -- configuration for connecting the ngsi-ld api
  ngsi:
    # -- url that ngsi-ld is available at
    url: http://tmforum-orion-ld:1026
    # -- path to be used as base
    path: ngsi-ld/v1
    # -- tenant to be used with the api
    tenant: orion

  # -- configuration for connecting to canismajor
  canismajor:
    # -- url canismajor is available at
    url: http://tmforum-canis-major:8080
    # -- path to be used as base
    path: /

  # -- additional labels for the deployment, if required
  additionalLabels: {}
  # -- additional annotations for the deployment, if required
  additionalAnnotations: {}
    ## tmforum resource requests and limits, we leave the default empty to make that a concious choice by the user.
    ## for the autoscaling to make sense, you should configure this.
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 500m
      memory: 1024Mi
  # -- selector template
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  # -- tolerations template
  # ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  # -- affinity template
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  # -- port to request health information at
  healthPort: 9090
  ## liveness and readiness probes of the tmforum broker, they will be evaluated against the version endpoint
  # ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 31
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30

## openshift specific route definition. Will not work on plain k8s
route:
  ## -- should the deployment create openshift routes
  enabled: true
  # -- annotations to be added to the route
  annotations: {}
  # -- host to be used
  # host: localhost
  # -- tls configuration for the route
  tls: {}
  # termination: edge

## ingress configuration
ingress:
  # -- should there be an ingress to connect tmforum with the public internet
  enabled: false
  # -- annotations to be added to the ingress
  annotations: {}
    # kubernetes.io/ingress.class: "ambassador"
    ## example annotations, allowing cert-manager to automatically create tls-certs and forcing everything to use ssl.
    # kubernetes.io/tls-acme: "true"
  # ingress.kubernetes.io/ssl-redirect: "true"
  # -- all hosts to be provided
  hosts: []
    ## provide a hosts and the paths that should be available
    # - host: localhost
    # paths:
  # - /
  # -- configure the ingress' tls
  tls: []
    # - secretName: tmforum-tls
    # hosts:
  # - tmforum.fiware.org

# -- port that the tmforum container uses
port: 8080

## configuration for prometheus montioring
prometheus:
  # -- should prometheus scrape be enabled
  enabled: true
  # -- path for prometheus scrape
  path: /prometheus
  # -- port prometheus scrape is available at
  port: 9090

# -- a list of additional env vars to be set, check the tmforum docu for all available options
additonalEnvVars: []

