source: https://github.com/FIWARE-Ops/data-space-connector
release: dsba
destination_namespace: &destination dsba
purpose: &purpose dsc-env
branch: &branch deploy/dsba
secretsEnabled: &secretsEnabled true
host: &host
tlsSecret: &tlsSecret

applications:

  - name: pdc-dsc-mysql
    enabled: true
    source_path: applications/mysql
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml
    values:
      mysql:
        fullnameOverride: mysql-dsc-pdc
        auth:
          existingSecret: mysql-secret
        rbac: 
          create: true
          rules:
            - apiGroups:
                - security.openshift.io
              resourceNames:
                - anyuid
              resources:
                - securitycontextconstraints
              verbs:
                - use

  - name: pdc-dsc-mongodb
    enabled: true
    source_path: applications/mongodb
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml
    values:
      mongodb:
        auth:
          enabled: true
          existingSecret: mongodb-secret

  - name: pdc-dsc-postgres
    enabled: true
    source_path: applications/postgres
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml
    values:
      postgresql:
        fullnameOverride: postgresql-dsc-pdc
        auth:
          username: keycloak  
          enablePostgresUser: true
          existingSecret: postgres-secret
          secretKeys:
            adminPasswordKey: postgres-root-password
            userPasswordKey: postgres-password
        rbac: 
          create: true
          rules:
            - apiGroups:
                - security.openshift.io
              resourceNames:
                - anyuid
              resources:
                - securitycontextconstraints
              verbs:
                - use
        primary:
          initdb:
            scripts:
              create.sh: |
                psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE keycloak_pdc;"

  - name: pdc-dsc-orion
    enabled: true
    source_path: applications/orion
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml
    values:
      orion:
        broker:
          db:
            auth: 
              user: root
              mech: "SCRAM-SHA-1"
            hosts:
              - pdc-dsc-mongodb
            user: root
            existingSecret:
              name: mongodb-secret
              key: mongodb-root-password
        initData:
          initEnabled: true
          entities:
            - name: deliveryorder_happypets001.json
              data: |
                {
                  "id": "urn:ngsi-ld:DELIVERYORDER:HAPPYPETS001",
                  "type": "DELIVERYORDER",
                  "issuer": {
                    "type": "Property",
                    "value": "Happy Pets"
                  },
                  "destinee": {
                    "type": "Property",
                    "value": "Happy Pets customer"
                  },
                  "deliveryAddress": {
                    "type": "Property",
                    "value": {
                      "addressCountry": "DE",
                      "addressRegion": "Berlin",
                      "addressLocality": "Berlin",
                      "postalCode": "12345",
                      "streetAddress": "Customer Strasse 23"
                    }
                  },
                  "originAddress": {
                    "type": "Property",
                    "value": {
                      "addressCountry": "DE",
                      "addressRegion": "Berlin",
                      "addressLocality": "Berlin",
                      "postalCode": "12345",
                      "streetAddress": "HappyPets Strasse 15"
                    }
                  },
                  "pda": {
                    "type": "Property",
                    "value": "2021-10-03"
                  },
                  "pta": {
                    "type": "Property",
                    "value": "14:00:00"
                  },
                  "eda": {
                    "type": "Property",
                    "value": "2021-10-02"
                  },
                  "eta": {
                    "type": "Property",
                    "value": "14:00:00"
                  },
                  "@context": [
                    "https://schema.lab.fiware.org/ld/context"
                  ]
                }
                
            - name: deliveryorder_happypets002.json
              data: |
                {
                  "id": "urn:ngsi-ld:DELIVERYORDER:HAPPYPETS002",
                  "type": "DELIVERYORDER",
                  "issuer": {
                    "type": "Property",
                    "value": "Happy Pets"
                  },
                  "destinee": {
                    "type": "Property",
                    "value": "Happy Pets 2nd customer"
                  },
                  "deliveryAddress": {
                    "type": "Property",
                    "value": {
                      "addressCountry": "DE",
                      "addressRegion": "Hamburg",
                      "addressLocality": "Hamburg",
                      "postalCode": "23456",
                      "streetAddress": "Customer Str. 18"
                    }
                  },
                  "originAddress": {
                    "type": "Property",
                    "value": {
                      "addressCountry": "DE",
                      "addressRegion": "Berlin",
                      "addressLocality": "Berlin",
                      "postalCode": "12345",
                      "streetAddress": "HappyPets Strasse 15"
                    }
                  },
                  "pda": {
                    "type": "Property",
                    "value": "2021-11-12"
                  },
                  "pta": {
                    "type": "Property",
                    "value": "11:00:00"
                  },
                  "eda": {
                    "type": "Property",
                    "value": "2021-11-12"
                  },
                  "eta": {
                    "type": "Property",
                    "value": "11:00:00"
                  },
                  "@context": [
                    "https://schema.lab.fiware.org/ld/context"
                  ]
                }

            - name: deliveryorder_animalgoods001.json
              data: |
                {
                  "id": "urn:ngsi-ld:DELIVERYORDER:ANIMALGOODS001",
                  "type": "DELIVERYORDER",
                  "issuer": {
                    "type": "Property",
                    "value": "Animal Goods"
                  },
                  "destinee": {
                    "type": "Property",
                    "value": "Cheaty Customer"
                  },
                  "deliveryAddress": {
                    "type": "Property",
                    "value": {
                      "addressCountry": "DE",
                      "addressRegion": "Bavaria",
                      "addressLocality": "Munich",
                      "postalCode": "60978",
                      "streetAddress": "Cheaty Str. 66"
                    }
                  },
                  "originAddress": {
                    "type": "Property",
                    "value": {
                      "addressCountry": "DE",
                      "addressRegion": "Hamburg",
                      "addressLocality": "Hamburg",
                      "postalCode": "34567",
                      "streetAddress": "Cheapstr. 23"
                    }
                  },
                  "pda": {
                    "type": "Property",
                    "value": "2021-12-02"
                  },
                  "pta": {
                    "type": "Property",
                    "value": "14:00:00"
                  },
                  "eda": {
                    "type": "Property",
                    "value": "2021-12-02"
                  },
                  "eta": {
                    "type": "Property",
                    "value": "14:00:00"
                  },
                  "@context": [
                    "https://schema.lab.fiware.org/ld/context"
                  ]
                }

            - name: deliveryorder_animalgoods002.json
              data: |
                {
                  "id": "urn:ngsi-ld:DELIVERYORDER:ANIMALGOODS002",
                  "type": "DELIVERYORDER",
                  "issuer": {
                    "type": "Property",
                    "value": "Animal Goods"
                  },
                  "destinee": {
                    "type": "Property",
                    "value": "Bob Customer"
                  },
                  "deliveryAddress": {
                    "type": "Property",
                    "value": {
                      "addressCountry": "DE",
                      "addressRegion": "Bavaria",
                      "addressLocality": "Munich",
                      "postalCode": "60979",
                      "streetAddress": "Bavarian Str. 2"
                    }
                  },
                  "originAddress": {
                    "type": "Property",
                    "value": {
                      "addressCountry": "DE",
                      "addressRegion": "Hamburg",
                      "addressLocality": "Hamburg",
                      "postalCode": "34567",
                      "streetAddress": "Cheapstr. 23"
                    }
                  },
                  "pda": {
                    "type": "Property",
                    "value": "2021-12-24"
                  },
                  "pta": {
                    "type": "Property",
                    "value": "14:00:00"
                  },
                  "eda": {
                    "type": "Property",
                    "value": "2021-12-24"
                  },
                  "eta": {
                    "type": "Property",
                    "value": "14:00:00"
                  },
                  "@context": [
                    "https://schema.lab.fiware.org/ld/context"
                  ]
                }

  - name: pdc-dsc-til
    enabled: true
    source_path: applications/trusted-issuers-list
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml
    values:
      trusted-issuers-list:
        route: 
          til: 
            enabled: true 
            host: til-pdc-dsc.dsba.fiware.dev
            tls:
              insecureEdgeTerminationPolicy: Redirect
              termination: edge
            certificate:
              issuer:
                kind: ClusterIssuer
                name: letsencrypt-aws-prod
          tir: 
            enabled: true 
            host: tir-pdc-dsc.dsba.fiware.dev
            tls:
              insecureEdgeTerminationPolicy: Redirect
              termination: edge
            certificate:
              issuer:
                kind: ClusterIssuer
                name: letsencrypt-aws-prod
  
        database:
          persistence: true
          host: mysql-dsc-pdc
          username: root
          name: til
          existingSecret:
            enabled: true
            name: mysql-secret
            key: dbPassword

        initData:
          initEnabled: true
          issuers:
            - name: mp_create
              issuer:
                did: "did:web:marketplace.dsba.fiware.dev:did"
                credentials:
                  - validFor:
                      from: "2022-07-21T17:32:28Z"
                      to: "2040-07-21T17:32:28Z"
                    credentialsType: "ActivationService"
                    claims:
                      - name: "roles"
                        allowedValues: 
                          - - names:
                              - "CREATE_ISSUER"
                              target: "did:web:packetdelivery.dsba.fiware.dev:did"
                  - validFor:
                      from: "2022-07-21T17:32:28Z"
                      to: "2040-07-21T17:32:28Z"
                    credentialsType: "VerifiableCredential"

  - name: pdc-dsc-walt-id
    enabled: true
    source_path: applications/walt-id
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml
    values:
      did: did:web:packetdelivery.dsba.fiware.dev:did
      route:
        enabled: true
        host: packetdelivery-dsc.dsba.fiware.dev
        tls:
          insecureEdgeTerminationPolicy: Redirect
          termination: edge
        certificate:
          issuer:
            kind: ClusterIssuer
            name: letsencrypt-aws-prod
      vcwaltid:
        persistence:
          enabled: true
          pvc:
            size: 1Gi
        templates:
          GaiaXParticipantCredential.json: |
            {
              "@context": [
                "https://www.w3.org/2018/credentials/v1",
                "https://registry.lab.dsba.eu/development/api/trusted-shape-registry/v1/shapes/jsonld/trustframework#"
              ],
              "type": [
                "VerifiableCredential"
              ],
              "id": "did:web:raw.githubusercontent.com:egavard:payload-sign:master",
              "issuer": "did:web:raw.githubusercontent.com:egavard:payload-sign:master",
              "issuanceDate": "2023-03-21T12:00:00.148Z",
              "credentialSubject": {
                "id": "did:web:raw.githubusercontent.com:egavard:payload-sign:master",
                "type": "gx:LegalParticipant",
                "gx:legalName": "dsba compliant participant",
                "gx:legalRegistrationNumber": {
                  "gx:vatID": "MYVATID"
                },
                "gx:headquarterAddress": {
                  "gx:countrySubdivisionCode": "BE-BRU"
                },
                "gx:legalAddress": {
                  "gx:countrySubdivisionCode": "BE-BRU"
                },
                "gx-terms-and-conditions:gaiaxTermsAndConditions": "70c1d713215f95191a11d38fe2341faed27d19e083917bc8732ca4fea4976700"
              }
            }
          NaturalPersonCredential.json: |
            {
              "@context": ["https://www.w3.org/2018/credentials/v1"],
              "credentialSchema": {
                "id": "https://raw.githubusercontent.com/FIWARE-Ops/tech-x-challenge/main/schema.json",
                "type": "FullJsonSchemaValidator2021"
              },
              "credentialSubject": {
                "type": "gx:NaturalParticipant",
                "familyName": "Happy",
                "firstName": "User",
                "roles": [{
                  "names": ["LEGAL_REPRESENTATIVE"],
                  "target": "did:web:onboarding"
                 }]
              },
              "id": "urn:uuid:3add94f4-28ec-42a1-8704-4e4aa51006b4",
              "issued": "2021-08-31T00:00:00Z",
              "issuer": "did:ebsi:2A9BZ9SUe6BatacSpvs1V5CdjHvLpQ7bEsi2Jb6LdHKnQxaN",
              "validFrom": "2021-08-31T00:00:00Z",
              "issuanceDate": "2021-08-31T00:00:00Z",
              "type": ["VerifiableCredential", "LegalPersonCredential"]
            }
          MarketplaceUserCredential.json: |
            {
              "@context": ["https://www.w3.org/2018/credentials/v1"],
              "credentialSchema": {
                "id": "https://raw.githubusercontent.com/FIWARE-Ops/tech-x-challenge/main/schema.json",
                "type": "FullJsonSchemaValidator2021"
              },
              "credentialSubject": {
                "type": "gx:NaturalParticipant",
                "email": "normal-user@fiware.org",
                "familyName": "PDC",
                "firstName": "employee",
                "lastName": "PDC",
                "roles": [{
                  "names": ["LEGAL_REPRESENTATIVE"],
                  "target": "did:web:onboarding"
                }]
              },
              "id": "urn:uuid:3add94f4-28ec-42a1-8704-4e4aa51006b4",
              "issued": "2021-08-31T00:00:00Z",
              "issuer": "did:ebsi:2A9BZ9SUe6BatacSpvs1V5CdjHvLpQ7bEsi2Jb6LdHKnQxaN",
              "validFrom": "2021-08-31T00:00:00Z",
              "issuanceDate": "2021-08-31T00:00:00Z",
              "type": ["MarketplaceUserCredential"]
            }
          EmployeeCredential.json: |
            {
              "@context": ["https://www.w3.org/2018/credentials/v1"],
              "credentialSchema": {
                "id": "https://raw.githubusercontent.com/FIWARE-Ops/tech-x-challenge/main/schema.json",
                "type": "FullJsonSchemaValidator2021"
              },
              "credentialSubject": {
                "type": "gx:NaturalParticipant",
                "email": "normal-user@fiware.org",
                "familyName": "PDC",
                "firstName": "employee",
                "lastName": "PDC",
                "roles": [{
                  "names": ["LEGAL_REPRESENTATIVE"],
                  "target": "did:web:onboarding"
                }]
              },
              "id": "urn:uuid:3add94f4-28ec-42a1-8704-4e4aa51006b4",
              "issued": "2021-08-31T00:00:00Z",
              "issuer": "did:ebsi:2A9BZ9SUe6BatacSpvs1V5CdjHvLpQ7bEsi2Jb6LdHKnQxaN",
              "validFrom": "2021-08-31T00:00:00Z",
              "issuanceDate": "2021-08-31T00:00:00Z",
              "type": ["EmployeeCredential"]
            }

  - name: pdc-dsc-ccs
    enabled: true
    source_path: applications/credentials-config-service
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml
    values:
      credentials-config-service:
        database:
          persistence: true
          host: mysql-dsc-pdc
          name: ccs
          existingSecret:
            enabled: true
            name: mysql-secret
            key: dbPassword

  - name: pdc-dsc-verifier
    enabled: true
    source_path: applications/verifier
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml
    values:
      vcverifier:
        deployment:
          logging:
            level: DEBUG
            pathsToSkip:
              - "/health"
          ssikit:
            auditorUrl: http://pdc-dsc-walt-id-vcwaltid:7003
          verifier:
            tirAddress: https://tir.dsba.fiware.dev/v3/issuers
          did: did:web:packetdelivery.dsba.fiware.dev:did
          configRepo:
            configEndpoint: http://pdc-dsc-ccs-credentials-config-service:8080/
        route:
          enabled: true
          host: verifier-pdc-dsc.dsba.fiware.dev
          tls:
            insecureEdgeTerminationPolicy: Redirect
            termination: edge
          certificate:
            issuer:
              kind: ClusterIssuer
              name: letsencrypt-aws-prod

  - name: pdc-dsc-keycloak
    enabled: true
    source_path: applications/keycloak
    source_ref: *branch
    destination: *destination
    helm_values:
    - values.yaml
    values:
      route:
        enabled: true
        host: packetdelivery-kc-dsc.dsba.fiware.dev
        tls:
          insecureEdgeTerminationPolicy: Redirect
          termination: edge
        certificate:
          issuer:
            kind: ClusterIssuer
            name: letsencrypt-aws-prod
      keycloak:
        service:
          type: ClusterIP
        logging:
          level: INFO
        replicaCount: 1
        auth:
          adminUser: fiwareAdmin
          adminPassword: fiwareAdmin
        serviceAccount:
          create: true
        rbac:
          create: true
          rules:
            - apiGroups:
                - security.openshift.io
              resourceNames:
                - anyuid
              resources:
                - securitycontextconstraints
              verbs:
                - use
        extraEnvVars:
          - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
            value: "true"
          - name: KEYCLOAK_LOG_LEVEL
            value: INFO
          - name: VCISSUER_ISSUER_DID
            value: "did:web:packetdelivery.dsba.fiware.dev:did"
          - name: VCISSUER_WALTID_ADDRESS
            value: "http://pdc-dsc-walt-id-vcwaltid"
        extraVolumes:
          - name: profiles
            configMap:
              name: pdc-dsc-keycloak-profile
          - name: providers
            emptyDir: {}
          - name: did-config
            configMap:
              name: pdc-dsc-keycloak-did-config
          - name: did-secret
            secret: 
              secretName: pdc-dsc-walt-id-vcwaltid-tls-sec
        initContainers:
          - name: add-vc-issuer
            image: quay.io/fiware/keycloak-vc-issuer:0.4.0
            imagePullPolicy: Always
            volumeMounts:
              - name: providers
                mountPath: /target
          - name: load-did
            image: quay.io/opencloudio/curl:4.2.0-build.8
            imagePullPolicy: Always
            command: 
              - /bin/sh
              - /opt/did/script/import.sh
            env:
              - name: WALTID_CORE_ADDRESS
                value: "dsba-packet-delivery-walt-id-vcwaltid:7000"
            volumeMounts:
              - name: did-config
                mountPath: /opt/did/script
              - name: did-secret
                mountPath: /opt/did/secret
        postgresql:
          enabled: false
        externalDatabase:
          host: postgresql-dsc-pdc
          user: postgres
          database: keycloak_pdc
          existingSecret: postgres-secret
          existingSecretPasswordKey: postgres-password
        keycloakConfigCli:
          enabled: true
          containerSecurityContext:
            enabled: false
          podSecurityContext:
            enabled: false
          configuration: {} #TODO: add realm config here
