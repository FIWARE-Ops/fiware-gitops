apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-wallet-realm
data:
  wallet-realm.json: |-
    {
      "id": "1d7923ea-e8dc-4c82-9987-7ced04a507e1",
      "realm": "wallet",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "8f644055-6774-40a2-a2eb-cc7f4239a7b0",
            "name": "default-roles-wallet",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": ["offline_access", "uma_authorization"],
              "client": {
                "account": ["manage-account", "view-profile"]
              }
            },
            "clientRole": false,
            "containerId": "1d7923ea-e8dc-4c82-9987-7ced04a507e1",
            "attributes": {}
          },
          {
            "id": "6b34ed88-04d1-4b8f-8090-50cf3a4a56fc",
            "name": "realmAdmin",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "1d7923ea-e8dc-4c82-9987-7ced04a507e1",
            "attributes": {}
          },
          {
            "id": "29c39ef0-4bb2-4718-8fbf-6ad29e5e83fe",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "1d7923ea-e8dc-4c82-9987-7ced04a507e1",
            "attributes": {}
          },
          {
            "id": "1fa56dcd-ad68-4c34-974d-7f1d2eb8585e",
            "name": "user",
            "description": "",
            "composite": false,
            "clientRole": false,
            "containerId": "1d7923ea-e8dc-4c82-9987-7ced04a507e1",
            "attributes": {}
          },
          {
            "id": "dcfa9bae-a096-4290-bc08-b3119d0d148c",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "1d7923ea-e8dc-4c82-9987-7ced04a507e1",
            "attributes": {}
          }
        ],
        "client": {
          "realm-management": [
            {
              "id": "ebd53fcd-daf4-4553-a381-ca302a7c8947",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": ["query-clients"]
                }
              },
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "1d94ca31-0b9a-4648-afcb-6b260dce6878",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "714fbf9e-93e0-46bd-b471-6e3d36b1d156",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "1396cc01-214f-47a8-86c8-27ad36eb4b11",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "1de20396-e9c0-4af2-8b2d-1b005242fada",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "80782220-23d8-4f99-aeea-aa95b11eba72",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "0bab839e-9caa-453c-a781-87c500b926d8",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "b53d24c0-5456-4347-a6fe-f7e585d659c7",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "9d12bc15-29fb-48ce-a005-9e1cdff8fb54",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "c6109d0b-c1c5-4e3c-a8dd-68ca4a726ed5",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "9c28c4eb-eea2-452e-9658-ffa4a4fcb0ca",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "6467d52f-8e54-4052-82c7-8cfa5cbc8544",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "0b920d22-5d09-4891-895d-866c9757c56f",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "8fddb4ff-1e67-4d8e-a0b2-532c833a20ce",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "view-clients",
                    "manage-authorization",
                    "manage-identity-providers",
                    "query-groups",
                    "query-realms",
                    "manage-clients",
                    "manage-realm",
                    "query-clients",
                    "view-realm",
                    "manage-users",
                    "view-authorization",
                    "view-events",
                    "create-client",
                    "query-users",
                    "view-identity-providers",
                    "view-users",
                    "impersonation",
                    "manage-events"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "1a978bed-9769-4e23-a044-4a072b59bb50",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "63b8937b-4802-4107-99b8-514f6deb43dd",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "0aecad49-d4f7-4921-bc36-f3b5895cc864",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": ["query-users", "query-groups"]
                }
              },
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "00b69760-6af4-4d33-a4b0-cd7a1069826a",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            },
            {
              "id": "c9b9d9c9-fb79-48f4-90da-772c26225068",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "admin-cli": [],
          "account-console": [],
          "broker": [
            {
              "id": "35a4b33e-6e86-4575-98fd-efb2b251dd66",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "69150cae-1aef-4a7d-a95b-d94f60290e2c",
              "attributes": {}
            }
          ],
          "user-registry-client": [],
          "account": [
            {
              "id": "31bee466-c36d-4451-9e8d-786a0c2546f2",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "b88dbaae-5e27-48c2-a009-671ad55bd1fc",
              "attributes": {}
            },
            {
              "id": "4bdc1624-ac62-4f70-a1e6-f242669656c3",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "b88dbaae-5e27-48c2-a009-671ad55bd1fc",
              "attributes": {}
            },
            {
              "id": "1a7c7d77-e584-47b3-a5a5-b14a920fb299",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "b88dbaae-5e27-48c2-a009-671ad55bd1fc",
              "attributes": {}
            },
            {
              "id": "4d1fe130-77bc-4bd9-9a93-7f3150d1bfe6",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": ["view-consent"]
                }
              },
              "clientRole": true,
              "containerId": "b88dbaae-5e27-48c2-a009-671ad55bd1fc",
              "attributes": {}
            },
            {
              "id": "bcdc3e6e-b838-46b9-bb50-c0dc1932b5c0",
              "name": "view-groups",
              "description": "${role_view-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "b88dbaae-5e27-48c2-a009-671ad55bd1fc",
              "attributes": {}
            },
            {
              "id": "51c4456c-9b2e-43b0-8561-144fd67698b7",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": ["manage-account-links"]
                }
              },
              "clientRole": true,
              "containerId": "b88dbaae-5e27-48c2-a009-671ad55bd1fc",
              "attributes": {}
            },
            {
              "id": "2cd3e07b-4d5a-4c20-8cad-8f6893081fa4",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "b88dbaae-5e27-48c2-a009-671ad55bd1fc",
              "attributes": {}
            },
            {
              "id": "a5e6c9e8-0715-4c93-bb05-9f005b41d390",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "b88dbaae-5e27-48c2-a009-671ad55bd1fc",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [],
      "defaultRole": {
        "id": "8f644055-6774-40a2-a2eb-cc7f4239a7b0",
        "name": "default-roles-wallet",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "1d7923ea-e8dc-4c82-9987-7ced04a507e1"
      },
      "requiredCredentials": ["password"],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
      ],
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": ["ES256"],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "users": [
        {
          "id": "f71c0cc3-69d1-49fd-abbf-78315b3ed4c5",
          "createdTimestamp": 1697611431853,
          "username": "adminwallet",
          "enabled": true,
          "totp": false,
          "emailVerified": false,
          "firstName": "admin",
          "lastName": "wallet",
          "email": "adminwallet@example.com",
          "credentials": [
            {
              "id": "a2adc3ea-ea17-42a5-bb07-26f8829e5fb1",
              "type": "password",
              "userLabel": "My password",
              "createdDate": 1697611522578,
              "secretData": "{\"value\":\"wmfBdVU3dDDmYLy32y3n4Iou9jY7Cb/Nv67QNGfk4rI=\",\"salt\":\"BIoiHPrU9qY89FduqUQp+w==\",\"additionalParameters\":{}}",
              "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
            }
          ],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["default-roles-wallet", "user"],
          "clientRoles": {
            "realm-management": ["realm-admin"]
          },
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "bfa40d87-f862-4f0b-b154-30a2ae383d3c",
          "createdTimestamp": 1698739102797,
          "username": "service-account-user-registry-client",
          "enabled": true,
          "totp": false,
          "emailVerified": false,
          "serviceAccountClientId": "user-registry-client",
          "credentials": [],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["default-roles-wallet"],
          "clientRoles": {
            "realm-management": ["realm-admin"]
          },
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "2c9951d2-86cc-44df-8d62-34227cfbef9c",
          "createdTimestamp": 1697455016022,
          "username": "userwallet",
          "enabled": true,
          "totp": false,
          "emailVerified": false,
          "firstName": "user",
          "lastName": "wallet",
          "email": "userwallet@example.com",
          "credentials": [
            {
              "id": "6397ea66-d438-435f-9ee1-20e091d2a78f",
              "type": "password",
              "userLabel": "My password",
              "createdDate": 1697455036355,
              "secretData": "{\"value\":\"gvmJqHZdpGwsh9vlfOPVVXOChxpdK/5OKUrzvTqLqGM=\",\"salt\":\"PkuzabKwuXLJEB6U2NLAJg==\",\"additionalParameters\":{}}",
              "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
            }
          ],
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": ["default-roles-wallet", "user"],
          "notBefore": 0,
          "groups": []
        }
      ],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": ["offline_access"]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": ["manage-account", "view-groups"]
          }
        ]
      },
      "clients": [
        {
          "id": "b88dbaae-5e27-48c2-a009-671ad55bd1fc",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/wallet/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/realms/wallet/account/*"],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "574d7d76-9b88-4394-ad27-e998b39e2a57",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/wallet/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/realms/wallet/account/*"],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "a3f8c49f-b48d-4021-8b5d-d9db967c2613",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "f1fc4dac-8d81-4e40-af38-397976836b76",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "69150cae-1aef-4a7d-a95b-d94f60290e2c",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "e6c00471-e69c-4e60-8387-eb1b02a371c6",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "fc2cf17b-2311-405d-9e7b-e6290082025e",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/wallet/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["/admin/wallet/console/*"],
          "webOrigins": ["+"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "58647e62-f524-4d9e-9f12-72375009bb97",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "1d774537-d329-4963-a2c1-da15c15ffa22",
          "clientId": "user-registry-client",
          "name": "user-registry-client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "fV51P8jFBo8VnFKMMuP3imw3H3i5mNck",
          "redirectUris": ["https://dome-wallet.fiware.dev"],
          "webOrigins": ["https://dome-wallet.fiware.dev"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1697455490",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "display.on.consent.screen": "false",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "38694751-b30c-4745-881e-c12eea01b158",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            },
            {
              "id": "c417b613-7227-4412-82ad-fa39d8c12316",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "id": "73e1d258-33a1-4ef2-a859-e4988313506e",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "clientId": "auth-client",
          "name": "auth-client",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": ["https://dome-wallet.fiware.dev/*", "https://dome-wallet.fiware.dev:4203"],
          "webOrigins": ["https://dome-wallet.fiware.dev"],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "client.secret.creation.time": "1697455490",
            "post.logout.redirect.uris": "https://dome-wallet.fiware.dev",
            "oauth2.device.authorization.grant.enabled": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "use.refresh.tokens": "true",
            "oidc.ciba.grant.enabled": "false",
            "backchannel.logout.session.required": "true",
            "client_credentials.use_refresh_token": "false",
            "acr.loa.map": "{}",
            "require.pushed.authorization.requests": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "display.on.consent.screen": "false",
            "token.response.type.bearer.lower-case": "false",
            "login_theme": "",
            "frontchannel.logout.url": "",
            "backchannel.logout.url": ""
          },      "authenticationFlowBindingOverrides": {
            "browser": "4e236ab3-efe1-45b7-aece-c926046fb00c"
          },
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "client_id",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "client_id",
                "jsonType.label": "String"
              }
            },
            {
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "userinfo.token.claim": "true",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ],
          "access": {
            "view": true,
            "configure": true,
            "manage": true
          },
          "authorizationServicesEnabled": false
        }
      ],
      "clientScopes": [
        {
          "id": "b6b3c6d3-c664-4f3a-b2dd-d9399e422726",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "ff54d27f-8260-4248-9cea-d4f87bbe868a",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            },
            {
              "id": "9f2714ca-601d-45b6-bb35-a7d85990f1ef",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "b6216276-1913-40f8-88cd-04e11934ea8b",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "9c6f2fd6-7c0a-4d68-90d4-67bf78a0c287",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "c9b44d07-e70b-4941-9839-9ee4d22b746f",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "b3db6a99-97c6-4aee-87b1-8693ffdc392a",
          "name": "acr",
          "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "88b44569-88da-41f9-a513-1953af8c27c6",
              "name": "acr loa level",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-acr-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            }
          ]
        },
        {
          "id": "a0892f2e-f833-42df-837d-513b3948fbb9",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "899beef5-8db6-4bd1-b473-ab537fb50021",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "f2f01db8-7f65-4a5f-bef7-3b01125c526f",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "2e0c69ec-27ad-4185-a92c-ac5f49b3ca31",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "31c6aab7-465e-458a-a547-8cab1c76b920",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "3e472980-4dcc-4c82-8aa5-6eaede3cf0ea",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "ae1faa86-a8d2-40f7-9ac8-1840b1c02ad4",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "f75a82ca-4a96-4437-ba21-2ca2a2b1c3a9",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "d12e83b2-ec8d-4650-b5bc-37d320f7acf3",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "ed983648-5502-4026-b32d-c57af60474a1",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String",
                "multivalued": "true"
              }
            },
            {
              "id": "202e7ba2-ce67-42a0-a396-996646a90805",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "56dc53dc-76b9-4578-97da-ac25d675cd88",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "95c449a8-4ac0-4d77-a4a0-cdf60a851218",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "aa7bea36-e5fc-4b30-adf5-495a4d52724e",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "1f881eb1-931d-4fde-be2c-12fd4e778635",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "6a5ab312-ea54-4278-9990-874845fa742c",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4f4b6cb6-9dcb-47a7-9391-b3db6ffd9d3c",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "b1f6d2a2-1595-49c9-afdb-2a87143a425f",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "eac3c4b2-7b91-4b58-88e1-7a7a72122f2e",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "dfa8cdde-aa85-44cf-89cb-6f3a063cb679",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "d36947af-c146-4410-85b9-b5cd0236d50d",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "faf2f1c3-b060-4a9e-b42a-f04ce442609b",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "d9b097ba-aa68-4018-8020-1cf136a7216b",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "long"
              }
            },
            {
              "id": "0ff254bc-46fe-4d37-bbaa-90b7386a0a3f",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "58a26d21-5446-490a-aae7-deed6a387dfb",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            },
            {
              "id": "e774c11f-9806-4d38-aa07-c6206db9a68b",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "ba96f7b6-8ee0-46d4-b8c7-c539539c3062",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "c1a1d711-5b99-4df1-aec6-dfe5a7b3b8f1",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "12d0e930-e884-4d1c-82f3-093131a53333",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            }
          ]
        }
      ],
      "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {},
      "eventsEnabled": false,
      "eventsListeners": ["jboss-logging"],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "d7de93b5-02cf-471f-b0ca-35cb87481c43",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": ["true"],
              "client-uris-must-match": ["true"]
            }
          },
          {
            "id": "04935cc5-5089-4fc1-ab76-bae32594d485",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": ["true"]
            }
          },
          {
            "id": "6b3f8916-0d57-45a9-98d6-425b09491e7a",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-sha256-pairwise-sub-mapper",
                "saml-role-list-mapper",
                "oidc-full-name-mapper",
                "saml-user-property-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-address-mapper",
                "saml-user-attribute-mapper",
                "oidc-usermodel-property-mapper"
              ]
            }
          },
          {
            "id": "c0130b2e-091d-4d1f-bb7b-5e40f55f0e0f",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": ["200"]
            }
          },
          {
            "id": "a2cec762-c09d-47ea-aca4-435aeb9bedea",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "saml-user-property-mapper",
                "saml-user-attribute-mapper",
                "oidc-usermodel-property-mapper",
                "oidc-address-mapper",
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "saml-role-list-mapper",
                "oidc-usermodel-attribute-mapper"
              ]
            }
          },
          {
            "id": "f9e4ea34-94cf-4520-a7a4-9fddf2827cbf",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "c52f8225-249f-41cf-b0e1-aae94d35558a",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "ac0f1359-1301-41ce-a0a1-61de0809e240",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": ["true"]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "5206339c-5bb2-4271-90de-4aa11179eacb",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "kid": ["86ce2e02-a91c-4f05-b029-214a5b513e96"],
              "secret": [
                "y68UdpTy3uvTfMlEEovePjYZ7nLBzJYYPco9yLu1EERzI_GgiIgSoeldvNeQBRD67nlJ_MplVxRoWT324DqIgg"
              ],
              "priority": ["100"],
              "algorithm": ["HS256"]
            }
          },
          {
            "id": "297fa5fd-c417-4168-9d64-87025bf7ab0b",
            "name": "rsa-enc-generated",
            "providerId": "rsa-enc-generated",
            "subComponents": {},
            "config": {
              "privateKey": [
                "MIIEpQIBAAKCAQEAyJn0HvZKE2CrxRUB7N3YFr6SA5IyHyJ5EuwU1v1dQWuy9da2bxrzkeCkA5+faW2bJCNHNIIy9pK9r3weoxI9RlRKk63lAp9OFep93/JYS9xslQmS441d+qCqsKqMtsVQXr+3pjlYMRNhC9S9Hx5UFVJz9B29RVElOzCMysoXCHTmdRoYaGrGaj3DWbrVcLvzup4qIX57mIMyIrwJ9StCRgFnr0aFS750G5F4hkECjbFwE6c6872eobPdfrusD3TSIt4MKYzdpey0NyT0cF7IY8fJLqayWKcmzmvXG3kEhg8Mjt6lOV5+XHenwEct2N1Gtrd/q+Xznj5oYo1R+pCLMwIDAQABAoIBABZkEiV8lzMc2L90WKqAQ/+clj6+IZ3BDXjzugsZ7RVWzfshKWwzEBnp1FTaiy12QFljHgO56VywGhUi37voVseUCV5SNtw5POWMWYWBjvfUwEKjIW6zLQNtze+knHVFhp2KJ8Ju5y2p0ezDT7glUfxZSju8MBAIfoU3UO0ia+S+Y2P8qiuGCsTAkyPTZLfz7u1Cshg8BgrUrEfzZy427eJwzcChscS6dJUl1OOYoNnHfQBXJSydxXMA77+QkTbAJcftRtDs2rV8lYrTrfVZ/5ewH6J90uqZmx5/MGu7IT6dytnKL+qzq832jxIRItaa4bXwRnosJKbPFArlUOImDY0CgYEA/vKi1n8iBqTN2vQSuyQBjwmh2QCyrIA7out8sEZAfw1l2tQQv+nOCkQNJUYf4DAiOpILExob6k3e0ySE+bUaoJeiYW8JL/+rfdRAtUCdMwT2GtK4O2P6o/bJaNHvjOVbZ/aduf/kOTw37AkvV/rnC2O/rSwCixstkztimT1B+aUCgYEAyW3l5x6prtukQOwjcZ6c6GKnqU1sXCUFqg8fyovgZ/xfj4klk8pY13ZplM/STt8mCu2hieYvdVfKbAyGDTJbY1uXEr8ZQ1r09iGd3zodz51F7QDcvJgddUoeRajyBJ97PhhUvJoz8J+7Ude8qD9Xcd8OgiCzjsOYhDhmw780afcCgYEAyrsCxfJeik3u7Bd99ZZSLv4H11l4uzdVNN5xTnLuwplSz0om75TqJLusgGFc45cjANQ1PkFaxVyaveeiXjanL+CkXTpAYgy6v9pSgk8ZMgLV+Mpreb6tBkkuK84U4UNZBjjTf55+Sw0ZovZC0YFQzHvLZddDRn6cJSHp69UMa4kCgYEAvl+zzgBY9v53+zQzO4thWPEE7SpTo7MJ63Rn45LYAO+xkYNZlJjF5r3vg8n3Rrv4xJNa/W4kpI7Yrc4YVBin7vv9iKY8RkCNDKMxBm1zB2npUNpjxYsvLE9k1Qmb02q3nDR6wdYsCNuuuudfUtSq3OCoYaxuiBus5io4VgE8lHkCgYEAnSJbif+ZyoqenGBlwG/7wPN0jkPYfj3aIn+9oJmFTtWrLaJ9TRIa6IqOlsvtpPaLZo+G8+lG9o0aUkN6ec70zqxBWLAPBFgivkM7sRV74CwKEms/El6jofWnbPCiM5DdcO+Ig0TcizGi0DkTv9o/ZOa0PB/qupVKjOASd2SjNm0="
              ],
              "keyUse": ["ENC"],
              "certificate": [
                "MIICoTCCAYkCBgGLN+kD7TANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlXYWxsZXRJZFAwHhcNMjMxMDE2MDk1MzE5WhcNMzMxMDE2MDk1NDU5WjAUMRIwEAYDVQQDDAlXYWxsZXRJZFAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDImfQe9koTYKvFFQHs3dgWvpIDkjIfInkS7BTW/V1Ba7L11rZvGvOR4KQDn59pbZskI0c0gjL2kr2vfB6jEj1GVEqTreUCn04V6n3f8lhL3GyVCZLjjV36oKqwqoy2xVBev7emOVgxE2EL1L0fHlQVUnP0Hb1FUSU7MIzKyhcIdOZ1GhhoasZqPcNZutVwu/O6niohfnuYgzIivAn1K0JGAWevRoVLvnQbkXiGQQKNsXATpzrzvZ6hs91+u6wPdNIi3gwpjN2l7LQ3JPRwXshjx8kuprJYpybOa9cbeQSGDwyO3qU5Xn5cd6fARy3Y3Ua2t3+r5fOePmhijVH6kIszAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGyQMOGIn39DEYtRSQbTrbNK0wF7Lr8cLD+FxmA4SsntCpgVulKTtVODKNXykGM5+LA4DHmuKko+un1tti3vyWRsIsgwDc/POAkrdTy6JfJRyjMJeRK/yFGMBRQ4c+G3PuF5Vaas8wzdL9q1VAPgXss7UNZgpkidFVSFXXHgs8bQIUfqoPCLJ2t0HGGp52LW2KcM+PL/tReVbgkdSKo3h1aA38jzz10vZabEVShAiatRCi2kqUn9gj1d95Nb0fTWz4Tatike2NYHczdG44TGkkv6H9hWlqujI4oIvkvIYpeEHPy6BWFF5pIIaAmXfa5S0M+dYTX2aXH/CLYe8udFBYE="
              ],
              "priority": ["100"],
              "algorithm": ["RSA-OAEP"]
            }
          },
          {
            "id": "287b91e4-e687-434b-95e1-8f3a83615822",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "privateKey": [
                "MIIEowIBAAKCAQEA5vDoCIoPXFgWwH4jC2HGbSgcFQ7Ggj4ctWmyo7uzBL22Qfnu6neIrkiclGMGU8M6pWT8o2QH/8plj9KGalVcVRIqcUEM47kJnZfRQZJFMmoiUYoA7/ChxUKotAyIb1FLdBMUpvECnRTxGMRrTa9cze2p9693IObM4V3GdSiTJdgKborzKQaVY4TyPVyjbjpP5CtqUpKbkY7l2DIBcaOemMSPTBe9uH+X9K9fgfE7IKGqwCfTHGKe0yEVepDqHWeWluNqvpHOnw7TekIn9eNKLTozceX7WP/2O2BPhili3UqInk6HnqesHgS0k7Bqt9XjX6OjtMCIa722NvXlDup7GQIDAQABAoIBACFSQSh6Qx0f2KiNiqDpyqeVUff32cyRCbNjPNNDEeFtPg7m8QIDnUUIVQ9T+mW7lYqnt4wbssvFeEH4LkzJZDkiFd2hdSqmWCzU6ux7HmDXz3vUXa5BGhZMN+tCo6zsHebxmdk8jRP9IYxhSto6ozlTQWLrflTQ+F7MGQZuhEzBSQOSJ2Z+J89s/lBy3MJXt8qq6DDrzt5eUG/fvEOymlBwS+zZcI5MoRhsvFZzWzyy/4xHwhosudk3EGmvthZDy2B0L6oJ2yXv41hN/MXLfmys/e7OvIFRKPTKanWXev31tdpoD1VhMqn4Zsb74Akfm8QHASFzWeg7kLWgLLOI3wECgYEA/kDTIjRfWMLes6Mp01bVUn3PYSB/CtUIs/vZ65sAj3LYV/R9YNQFIg9IkMdvIDDAML86sIplkW05J3Fh8Qvy1o7t/2QH+uEluL7uUMgR6PiyLHJ6JepjRC5fwomHH4g+l47zc9XBN+Ppwo+/CwOsle2NZ+ThL28OsNKT0MKgx7UCgYEA6IcUpkWBKhEkW0Kq3/pAVGa4OPTkWy6Fyz/3mCC9GlP76JVmdBLnM3wzkLMnGFYnwDIb9ebrnen/D16DcjE+IIL9No5CpdUArVpDPitto0IVYoJTtBO1+Vyc8XsQtD2jAz/tORsv38hREhYQXyKguTSApwH/hwWhyLeG1dJq/FUCgYBn0/skjbSeH74oJ6pt5pjovf3RER8wQjzymxer8jlxWxnkGTCWOR77gLhGf1rvD1l8zqrd6zZ9A9iCNfgkIpgBbI7ea3Ai0IzB/B6AGKPPurewFPOyxhvRfQqX++eVReMhqzvaAuGLvGP6kw8WJWL2OvMzCTG4WCbsqKG6b7COvQKBgQDSlFqABdvmk+Wf/C0xb7nIdcoKUsVnSieCnOiGTcfTyxEMXhiNr/zPpIAyX/xcztFq/jZSKJFizmHdslNKHAxOdzIHsSfsdI0LcP4KlFvTCOrC7pINN/iJ3nSHQFMtV9CEBeW43MUrXYcF4RNshLiXYVPNa0LVLaWJV6N1ivy2jQKBgHptnmJ40BTq++INlQ5IyQZCEU1pZltBNT8X6NWX6UJWO+8D/YwMPORjiiI2hylGi+BGv/bRVRra1C5VQ3nSMg0DYl6cXTQyfUctccwg7hGhNclMxjacMo8wYDRVCA2CnfU6imLNu8sJmAwu4hFiLuJnH2N5DdQ/eBkyEBWq9F4f"
              ],
              "keyUse": ["SIG"],
              "certificate": [
                "MIICoTCCAYkCBgGLN+kCkTANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlXYWxsZXRJZFAwHhcNMjMxMDE2MDk1MzE5WhcNMzMxMDE2MDk1NDU5WjAUMRIwEAYDVQQDDAlXYWxsZXRJZFAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDm8OgIig9cWBbAfiMLYcZtKBwVDsaCPhy1abKju7MEvbZB+e7qd4iuSJyUYwZTwzqlZPyjZAf/ymWP0oZqVVxVEipxQQzjuQmdl9FBkkUyaiJRigDv8KHFQqi0DIhvUUt0ExSm8QKdFPEYxGtNr1zN7an3r3cg5szhXcZ1KJMl2ApuivMpBpVjhPI9XKNuOk/kK2pSkpuRjuXYMgFxo56YxI9MF724f5f0r1+B8TsgoarAJ9McYp7TIRV6kOodZ5aW42q+kc6fDtN6Qif140otOjNx5ftY//Y7YE+GKWLdSoieToeep6weBLSTsGq31eNfo6O0wIhrvbY29eUO6nsZAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAMRktb6+IgDnz9hguDaSegned3ese8JKiOy2+E16B9pEXrXKJikWyR3LlXcBfIB7buXC86MLnfi85x4CSaREXrL1XxNiKDWk5AF8tbICzlu3Y1nlLRaZ7FxyLPKpNf8MTKypfsb+VKSEzOpIlgvIxGL+nTuuW9pSncUyB8Wlzv7BdBWsjRkJeXNTUJSfmMm7yolhC1FtUsc+GyVy7OGJk+1py4YXdf0wQhwnQxAvV0g/iSDuXkAse+W46BeYsFeGKNnS1+SDB2CxdkAZH9ROEtvgNkIECfaK7dbsK6H0sehvNx6muilbeAUrF4fvCc3+Nn+snk5mag7dikmZquRCvas="
              ],
              "priority": ["100"]
            }
          },
          {
            "id": "12eb8150-74c0-4d4f-8651-6bfd9293f2ae",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "kid": ["108ead8d-1ac0-430e-82e4-cd3b69d3bde6"],
              "secret": ["tFe5vtqgPZhRs7gnO_Gu8w"],
              "priority": ["100"]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "authenticationFlows": [
        {
          "id": "55d433f0-6d9e-4505-9c80-5adcb988de45",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "authenticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f4de28db-ef9f-4399-8d75-ad0b26edce08",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "51dbb397-f802-4cac-b457-d95e99970d64",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "1bec08a2-89e3-4b30-aef4-c51791f6779e",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "533deece-a5de-4638-a481-a5552e95597a",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "authenticatorFlow": true,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "9da6c713-d2ad-4a18-96b9-47db99b10717",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "a9509ee1-51e4-4cd2-b4c3-ef279356e855",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "authenticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "d39d5960-c769-4cfc-b97d-358e0c71dffe",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "authenticatorFlow": true,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        }, {
          "id": "4e236ab3-efe1-45b7-aece-c926046fb00c",
          "alias": "WebAuthn browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "authenticatorFlow": true,
              "flowAlias": "WebAuthn browser forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0738b235-63f0-4d93-a78d-3ff512e9df04",
          "alias": "WebAuthn browser forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": false,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "webauthn-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 11,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "e39cf811-c443-466f-8b15-28144a8b7cf7",
          "alias": "browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "authenticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "78e89a38-a05f-4b95-9afa-f2ab64e6222f",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "648e67e6-db33-4dc9-a0fa-79f381e59fa0",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "authenticatorFlow": true,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "f3d54578-8568-471b-aee8-eed98c2230e3",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "8e4ae0c4-6a7e-48a7-8274-100280b3df73",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "authenticatorFlow": true,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "23278499-b204-4c1d-875b-e439ee118288",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "authenticatorFlow": true,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "472ac8ba-0af5-4781-9804-540d8d87f2c4",
          "alias": "registration",
          "description": "registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "82124f4e-f443-45fd-8c8a-001c72e680cb",
          "alias": "registration form",
          "description": "registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-profile-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 40,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "fb414b09-8b6c-4617-8a8b-9400cba183ad",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "authenticatorFlow": true,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "33bf2dc4-0ae8-4239-a6d2-3f4dd20a0359",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "authenticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "1bb93f4e-c794-4597-8e7b-bd18f332493f",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "60cd31d7-6088-4aa8-995c-ee10b175de98",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "TERMS_AND_CONDITIONS",
          "name": "Terms and Conditions",
          "providerId": "TERMS_AND_CONDITIONS",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "webauthn-register",
          "name": "Webauthn Register",
          "providerId": "webauthn-register",
          "enabled": true,
          "defaultAction": false,
          "priority": 70,
          "config": {}
        },
        {
          "alias": "webauthn-register-passwordless",
          "name": "Webauthn Register Passwordless",
          "providerId": "webauthn-register-passwordless",
          "enabled": true,
          "defaultAction": false,
          "priority": 80,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false"
      },
      "keycloakVersion": "22.0.4",
      "userManagedAccessAllowed": false,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    }

