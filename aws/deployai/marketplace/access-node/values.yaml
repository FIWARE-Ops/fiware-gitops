access-node:
  desmos:
    # -- should the desmos-blockchain-connector be enabled
    enabled: false

  dlt-adapter:
    # -- should the dlt-adapter be enabled
    enabled: false

  # postgres for desmos only
  postgresql:
    # -- should the postgresql deployment be enabled
    enabled: true
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    fullnameOverride: desmos-postgres
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    nameOverride: desmos-postgres
    ## auth configuration for the database
    auth:
      # -- username to be used
      username: postgres
      # -- should the default postgres user be enabled
      enablePostgresUser: true
      # -- existing secret
      existingSecret: postgres-secret
      secretKeys:
        adminPasswordKey: postgres-root-password
        userPasswordKey: postgres-password
    ## configuration of the postgres primary replica
    primary:
      persistence:
        size: 2Gi
      ## provide db initialization
      initdb:
        ## provide scripts for initialization
        scripts:
          # -- create the database as expected by the blockchain-connector
          create.sh: |
            psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE desmos;"

  scorpio:
    # -- should scorpio be enabled
    enabled: true
    ## configuration of the image to be used
    image:
      # -- repository to be used - resource friendly all-in-one-runner without kafka
      repository: scorpiobroker/all-in-one-runner
      # -- tag of the image to be used - latest java image without kafka
      tag: java-4.1.10
    ## configuration of the database to be used by broker
    db:
      # -- host of the db
      dbhost: postgis-marketplace
      # -- username to be used
      user: postgres
      # -- existing secret to retrieve the db password
      existingSecret:
        # -- should an existing secret be used
        enabled: true
        # -- name of the secret
        name: postgres-secret
        # -- key to retrieve the password from
        key: postgres-root-password
    kafka:
      # -- Enable usage of Kafka
      enabled: true
      # -- Bus host for Kafka
      bushost: kafka-marketplace
      
    ## configuration of the readiness probe
    readinessProbe:
      # -- path to be used for the readiness probe, older versions used /actuator/health
      path: /q/health
    ## configuration of the liveness probe
    livenessProbe:
      # -- path to be used for the readiness probe, older versions used /actuator/health
      path: /q/health
    # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
    fullnameOverride: scorpio-marketplace
    ## configuration to be used for the service offered by scorpio
    service:
      # -- ClusterIP is the recommended type for most clusters
      type: ClusterIP

  ## configuration for kafka in case its used by scorpio - see https://github.com/bitnami/charts/tree/main/bitnami/kafka
  kafka:
    # -- should kafka be enabled?
    enabled: false

  ## configuration of postgis to be used for scorpio - see https://github.com/bitnami/charts/tree/main/bitnami/postgresql for details
  postgis:
    # -- should postgis be enabled
    enabled: false

  tm-forum-api:
    fullnameOverride: tm-forum-api
    nameOverride: tm-forum-api
    # -- should tm-forum-api be enabled
    enabled: true
    ## configuration to be used by every api-deployment if nothing specific is provided.
    defaultConfig:
      # -- configuration to be used for the image of the containers
      image:
        # -- current latest tag
        tag: "0.20.1"
      # -- ngsi-ld broker connection information
      ngsiLd:
        # -- address of the broker
        url: http://scorpio-marketplace:9090
      # -- default context to be used when contacting the context broker
      contextUrl: https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld
      # -- host that the tm-forum api can be reached at, when the proxy is enabled it should be set to that address. If not, set the host for each api individually
      serverHost: http://localhost:8080
    ## configuration for the api proxy, to serve all apis through one kubernetes service
    apiProxy:
      # -- the proxy must be enabled
      enabled: false

    apis:
    - name: party-catalog
      image: tmforum-party-catalog
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF632-Party-v4.0.0.swagger.json

    - name: customer-bill-management
      image: tmforum-customer-bill-management
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF678-CustomerBill-v4.0.0.swagger.json

    - name: customer-management
      image: tmforum-customer-management
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF629-Customer-v4.0.0.swagger.json

    - name: product-catalog
      image: tmforum-product-catalog
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.1.0/swagger/TMF620-ProductCatalog-v4.1.0.swagger.json

    - name: product-inventory
      image: tmforum-product-inventory
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF637-ProductInventory-v4.0.0.swagger.json

    - name: product-ordering-management
      image: tmforum-product-ordering-management
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF622-ProductOrder-v4.0.0.swagger.json

    - name: resource-catalog
      image: tmforum-resource-catalog
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.1.0/swagger/TMF634-ResourceCatalog-v4.0.0.swagger.json

    - name: resource-function-activation
      image: tmforum-resource-function-activation
      basePath: /
      specUrl: https://raw.githubusercontent.com/wistefan/TMF664_ResourceFunctionActivationConfiguration/master/TMF664-ResourceFunctionActivation-v4.0.0.swagger.json

    - name: resource-inventory
      image: tmforum-resource-inventory
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF639-ResourceInventory-v4.0.0.swagger.json

    - name: service-catalog
      image: tmforum-service-catalog
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF633-ServiceCatalog-v4.0.0.swagger.json

    - name: account
      image: tmforum-account
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF666-Account-v4.0.0.swagger.json

    - name: agreement
      image: tmforum-agreement
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF651-Agreement-v4.0.0.swagger.json

    - name: usage-management
      image: tmforum-usage-management
      basePath: /
      specUrl: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/OpenApiTable/4.0.0/swagger/TMF635-UsageManagement-v4.0.0.swagger.json
