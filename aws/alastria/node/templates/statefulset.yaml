apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "alastria.fullname" . }}
  labels:
    {{ include "alastria.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.statefulset.revisionHistoryLimit }}
  serviceName: {{ include "alastria.fullname" . }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "alastria.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{ include "alastria.labels" . | nindent 8 }}
          {{- with .Values.statefulset.additionalLabels }}
          {{- toYaml . | nindent 8 }}
          {{- end }}
      {{- if .Values.statefulset.additionalAnnotations -}}
      annotations:
        prometheus.io/scrape: {{ .Values.prometheus.enabled | quote }}
        prometheus.io/path: {{ .Values.prometheus.path }}
        prometheus.io/port: 6060
        {{- with .Values.statefulset.additionalAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "alastria.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.statefulset.image.pullPolicy }}
          image: "{{ .Values.statefulset.image.repository }}:{{ .Values.statefulset.image.tag }}"
          ports:
            - name: geth
              containerPort: 21000
              protocol: TCP
            - name: http
              containerPort: 22000
              protocol: TCP
            - name: constellation
              containerPort: 9000 
              protocol: TCP
            - name: websocket
              containerPort: 80
              protocol: TCP
            - name: statistics
              containerPort: 8086
              protocol: TCP
            - name: resolver
              containerPort: 53
              protocol: TCP
            - name: prometheus
              containerPort: 6060
              protocol: TCP
          env:
            - name: NODE_NAME
              value: {{ .Values.node.name | quote }}
            - name: NODE_TYPE
              value: {{ .Values.node.type | quote }}
            - name: NODE_BRANCH
              value: {{ .Values.node.branch | quote }}
            - name: EXTERNAL_IP
              value: {{ .Values.node.externalIp | quote }}
            {{- with .Values.additionalEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.statefulset.resources }}
          resources:
            limits:
              cpu: {{ .Values.node.cpu }}
              memory: {{ .Values.node.ram }}Gi
              requests:
                cpu: {{ .Values.node.cpu }}
                memory:  {{ .Values.node.cpu }}Gi
          {{- end }}
          volumeMounts:
            - name: work-dir
              mountPath: /opt/alastria/data
      {{- with .Values.statefulset.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulset.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulset.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: work-dir
      {{- with .Values.statefulset.additionalAnnotations }}
      annotations:
        {{ toYaml . | indent 8 }}
      {{- end }}
      labels:
        {{- include "alastria.labels" . | nindent 8 }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
          requests:
              storage: {{ .Values.node.storageSize | quote }}